--- chrome/browser/ui/layout_constants.cc	2019-04-05 03:49:05.000000000 +0300
+++ chrome/browser/ui/layout_constants.cc	2019-04-09 22:51:41.569069569 +0300
@@ -7,13 +7,148 @@
 #include "base/logging.h"
 #include "ui/base/material_design/material_design_controller.h"
 
+#include <fstream>
+#include <iostream>
+#include <cstdio>
+#include <cstdlib>
+
+typedef int layout_t;
+
+static const char* CONFIG_NAME = "/chromium.layout.bin";
+
+struct InternalLayoutConstants {
+  layout_t bookmark_bar_height;
+  layout_t bookmark_bar_button_height;
+  layout_t bookmark_bar_ntp_height;
+  layout_t hosted_app_menu_button_size;
+  layout_t hosted_app_page_action_icon_size;
+  layout_t location_bar_bubble_vertical_padding;
+  layout_t location_bar_bubble_font_vertical_padding;
+  layout_t location_bar_bubble_corner_radius;
+  layout_t location_bar_bubble_anchor_vertical_inset;
+  layout_t location_bar_element_padding;
+  layout_t location_bar_height;
+  layout_t location_bar_icon_size;
+  layout_t tab_after_title_padding;
+  layout_t tab_alert_indicator_capture_icon_width;
+  layout_t tab_alert_indicator_icon_width;
+  layout_t tab_height;
+  layout_t tab_pre_title_padding;
+  layout_t tab_stack_distance;
+  layout_t tabstrip_toolbar_overlap;
+  layout_t toolbar_element_padding;
+  layout_t toolbar_standard_spacing;
+  layout_t location_bar_icon_interior_padding_top;
+  layout_t location_bar_icon_interior_padding_left;
+  layout_t location_bar_icon_interior_padding_bottom;
+  layout_t location_bar_icon_interior_padding_right;
+  layout_t toolbar_button_top;
+  layout_t toolbar_button_left;
+  layout_t toolbar_button_bottom;
+  layout_t toolbar_button_right;
+  layout_t toolbar_action_view_top;
+  layout_t toolbar_action_view_left;
+  layout_t toolbar_action_view_bottom;
+  layout_t toolbar_action_view_right;
+};
+
+// These are the default values.
+InternalLayoutConstants configuredState = {
+  // BOOKMARK_BAR_HEIGHT
+  28,
+  // BOOKMARK_BAR_BUTTON_HEIGHT
+  28,
+  // BOOKMARK_BAR_NTP_HEIGHT
+  39,
+  // HOSTED_APP_MENU_BUTTON_SIZE
+  24,
+  // HOSTED_APP_PAGE_ACTION_ICON_SIZE
+  16,
+  // LOCATION_BAR_BUBBLE_VERTICAL_PADDING
+  3,
+  // LOCATION_BAR_BUBBLE_FONT_VERTICAL_PADDING
+  2,
+  // LOCATION_BAR_BUBBLE_CORNER_RADIUS
+  8,
+  // LOCATION_BAR_BUBBLE_ANCHOR_VERTICAL_INSET
+  1,
+  // LOCATION_BAR_ELEMENT_PADDING
+  2,
+  // LOCATION_BAR_HEIGHT
+  28,
+  // LOCATION_BAR_ICON_SIZE
+  16,
+  // TAB_AFTER_TITLE_PADDING
+  4,
+  // TAB_ALERT_INDICATOR_CAPTURE_ICON_WIDTH
+  16,
+  // TAB_ALERT_INDICATOR_ICON_WIDTH
+  16,
+  // TAB_HEIGHT
+  34,
+  // TAB_PRE_TITLE_PADDING
+  8,
+  // TAB_STACK_DISTANCE
+  6,
+  // TABSTRIP_TOOLBAR_OVERLAP
+  1,
+  // TOOLBAR_ELEMENT_PADDING
+  4,
+  // TOOLBAR_STANDARD_SPACING
+  8,
+  // LOCATION_BAR_ICON_INTERIOR_PADDING_TOP
+  4,
+  // LOCATION_BAR_ICON_INTERIOR_PADDING_LEFT
+  8,
+  // LOCATION_BAR_ICON_INTERIOR_PADDING_BOTTOM
+  4,
+  // LOCATION_BAR_ICON_INTERIOR_PADDING_RIGHT
+  8,
+  // TOOLBAR_BUTTON_TOP
+  6,
+  // TOOLBAR_BUTTON_LEFT
+  6,
+  // TOOLBAR_BUTTON_BOTTOM
+  6,
+  // TOOLBAR_BUTTON_RIGHT
+  6,
+  // TOOLBAR_ACTION_VIEW_TOP
+  0,
+  // TOOLBAR_ACTION_VIEW_LEFT
+  0,
+  // TOOLBAR_ACTION_VIEW_BOTTOM
+  0,
+  // TOOLBAR_ACTION_VIEW_RIGHT
+  0
+};
+
+/**
+ * This gets called automatically on process enter on Unix systems(no Win32).
+ */
+__attribute__((constructor))
+static void initialize_layout_constants() {
+  std::string config_name(CONFIG_NAME);
+  std::string home_path(getenv("HOME"));
+  std::string final_path = home_path + config_name;
+  std::ifstream config(final_path.c_str(), std::ios::in | std::ios::binary);
+  if(config.good()) {
+    // Config file exists.
+    std::puts("LayoutConstants: loading config file()!");
+    config.read((char*)(&configuredState), sizeof(InternalLayoutConstants));
+    config.close();
+  }
+  else {
+    // Create default config file.
+    std::puts("LayoutConstants: creating config file()!");
+    std::ofstream config(final_path.c_str(), std::ios::out | std::ios::binary);
+    config.write((char*)(&configuredState), sizeof(InternalLayoutConstants));
+    config.close();
+  }
+}
+
 #if defined(OS_MACOSX)
 int GetCocoaLayoutConstant(LayoutConstant constant) {
   switch (constant) {
-    case BOOKMARK_BAR_HEIGHT:
-      return 28;
-    case BOOKMARK_BAR_NTP_HEIGHT:
-      return 39;
     case BOOKMARK_BAR_HEIGHT_NO_OVERLAP:
       return GetCocoaLayoutConstant(BOOKMARK_BAR_HEIGHT) - 2;
     case BOOKMARK_BAR_NTP_PADDING:
@@ -27,59 +162,49 @@
 #endif
 
 int GetLayoutConstant(LayoutConstant constant) {
-  const bool touch_ui = ui::MaterialDesignController::touch_ui();
   switch (constant) {
     case BOOKMARK_BAR_HEIGHT:
-      // The fixed margin ensures the bookmark buttons appear centered relative
-      // to the white space above and below.
-      static constexpr int kBookmarkBarAttachedVerticalMargin = 5;
-      return GetLayoutConstant(BOOKMARK_BAR_BUTTON_HEIGHT) +
-             kBookmarkBarAttachedVerticalMargin;
+      return configuredState.bookmark_bar_height;
     case BOOKMARK_BAR_BUTTON_HEIGHT:
-      return touch_ui ? 36 : 28;
+      return configuredState.bookmark_bar_button_height;
     case BOOKMARK_BAR_NTP_HEIGHT:
-      return touch_ui ? GetLayoutConstant(BOOKMARK_BAR_HEIGHT) : 39;
+      return configuredState.bookmark_bar_ntp_height;
     case HOSTED_APP_MENU_BUTTON_SIZE:
-      return 24;
+      return configuredState.hosted_app_menu_button_size;
     case HOSTED_APP_PAGE_ACTION_ICON_SIZE:
-      // We must limit the size of icons in the title bar to avoid vertically
-      // stretching the container view.
-      return 16;
+      return configuredState.hosted_app_page_action_icon_size;
     case LOCATION_BAR_BUBBLE_VERTICAL_PADDING:
-      return 3;
+      return configuredState.location_bar_bubble_vertical_padding;
     case LOCATION_BAR_BUBBLE_FONT_VERTICAL_PADDING:
-      return 2;
+      return configuredState.location_bar_bubble_font_vertical_padding;
     case LOCATION_BAR_BUBBLE_CORNER_RADIUS:
-      // TODO(tapted): This should match BubbleBorder::GetBorderRadius() once
-      // MD is default for secondary UI everywhere. That is, the constant should
-      // move to views/layout_provider.h so that all bubbles are consistent.
-      return 8;
+      return configuredState.location_bar_bubble_corner_radius;
     case LOCATION_BAR_BUBBLE_ANCHOR_VERTICAL_INSET:
-      return 1;
+      return configuredState.location_bar_bubble_anchor_vertical_inset;
     case LOCATION_BAR_ELEMENT_PADDING:
-      return touch_ui ? 3 : 2;
+      return configuredState.location_bar_element_padding;
     case LOCATION_BAR_HEIGHT:
-      return touch_ui ? 36 : 28;
+      return configuredState.location_bar_height;
     case LOCATION_BAR_ICON_SIZE:
-      return touch_ui ? 20 : 16;
+      return configuredState.location_bar_icon_size;
     case TAB_AFTER_TITLE_PADDING:
-      return touch_ui ? 8 : 4;
+      return configuredState.tab_after_title_padding;
     case TAB_ALERT_INDICATOR_CAPTURE_ICON_WIDTH:
-      return 16;
+      return configuredState.tab_alert_indicator_capture_icon_width;
     case TAB_ALERT_INDICATOR_ICON_WIDTH:
-      return touch_ui ? 12 : 16;
+      return configuredState.tab_alert_indicator_icon_width;
     case TAB_HEIGHT:
-      return (touch_ui ? 41 : 34) + GetLayoutConstant(TABSTRIP_TOOLBAR_OVERLAP);
+      return configuredState.tab_height;
     case TAB_PRE_TITLE_PADDING:
-      return 8;
+      return configuredState.tab_pre_title_padding;
     case TAB_STACK_DISTANCE:
-      return touch_ui ? 4 : 6;
+      return configuredState.tab_stack_distance;
     case TABSTRIP_TOOLBAR_OVERLAP:
-      return 1;
+      return configuredState.tabstrip_toolbar_overlap;
     case TOOLBAR_ELEMENT_PADDING:
-      return touch_ui ? 0 : 4;
+      return configuredState.toolbar_element_padding;
     case TOOLBAR_STANDARD_SPACING:
-      return touch_ui ? 12 : 8;
+      return configuredState.toolbar_standard_spacing;
     default:
       break;
   }
@@ -88,19 +213,30 @@
 }
 
 gfx::Insets GetLayoutInsets(LayoutInset inset) {
-  const bool touch_ui = ui::MaterialDesignController::touch_ui();
   switch (inset) {
     case LOCATION_BAR_ICON_INTERIOR_PADDING:
-      return touch_ui ? gfx::Insets(5, 10) : gfx::Insets(4, 8);
+      return gfx::Insets(
+        configuredState.location_bar_icon_interior_padding_top,
+        configuredState.location_bar_icon_interior_padding_left,
+        configuredState.location_bar_icon_interior_padding_bottom,
+        configuredState.location_bar_icon_interior_padding_right
+      );
 
     case TOOLBAR_BUTTON:
-      return gfx::Insets(touch_ui ? 12 : 6);
+      return gfx::Insets(
+        configuredState.toolbar_button_top,
+        configuredState.toolbar_button_left,
+        configuredState.toolbar_button_bottom,
+        configuredState.toolbar_button_right
+      );
 
-    case TOOLBAR_ACTION_VIEW: {
-      // TODO(afakhry): Unify all toolbar button sizes on all platforms.
-      // https://crbug.com/822967.
-      return gfx::Insets(touch_ui ? 10 : 0);
-    }
+    case TOOLBAR_ACTION_VIEW:
+      return gfx::Insets(
+        configuredState.toolbar_action_view_top,
+        configuredState.toolbar_action_view_left,
+        configuredState.toolbar_action_view_bottom,
+        configuredState.toolbar_action_view_right
+      );
   }
   NOTREACHED();
   return gfx::Insets();